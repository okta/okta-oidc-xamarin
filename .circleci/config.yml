# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  build-nuget-packages:
    macos:
      xcode: 13.3.1
    steps:
      - checkout
      - run: 
          name: Create artifacts directory
          command: mkdir -p ./artifacts
      - run:
          name: Install Dotnet Sdk
          command: brew install --cask dotnet-sdk
      - run: 
          name: Create Mono directory
          command: mkdir -p /Library/Frameworks/Mono.framework
      - run:
          name: Download Mono
          command: curl https://download.mono-project.com/archive/6.12.0/macos-10-universal/MonoFramework-MDK-6.12.0.122.macos10.xamarin.universal.pkg --output MonoFramework-MDK-6.12.0.122.macos10.xamarin.universal.pkg
      - run: 
          name: Install Mono
          command: sudo installer -pkg ./MonoFramework-MDK-6.12.0.122.macos10.xamarin.universal.pkg -target /Library/Frameworks/Mono.framework/
      - run:
          name: Install Xamarin
          command: brew install --cask xamarin-mac
      - run: 
          name: Nuget restore
          command: |
            nuget restore ./Okta.Xamarin/Okta.Xamarin/Okta.Xamarin.csproj &&
            nuget restore ./Okta.Xamarin/Okta.Xamarin.iOS/Okta.Xamarin.iOS.csproj &&
            nuget restore ./Okta.Xamarin/Okta.Xamarin.Android/Okta.Xamarin.Android.csproj &&
            nuget restore ./Okta.Xamarin/Tests/Okta.Xamarin.Test/Okta.Xamarin.Test.csproj
      - run:
          name: Run Unit Tests
          command: dotnet test ./Okta.Xamarin/Tests/Okta.Xamarin.Test/Okta.Xamarin.Test.csproj
      - run:
          name: Build Okta.Xamarin nuget package
          command: nuget pack ./Okta.Xamarin/Okta.Xamarin/Okta.Xamarin.csproj -Build
      - run:
          name: Build Okta.Xamarin.Android nuget package
          command: nuget pack ./Okta.Xamarin/Okta.Xamarin.Android/Okta.Xamarin.Android.csproj -Build
      - run:
          name: Build Okta.Xamarin.iOS nuget package
          command: nuget pack ./Okta.Xamarin/Okta.Xamarin.iOS/Okta.Xamarin.iOS.csproj -Build
      - run:
          name: Copy nuget artifacts
          command: mv *.nupkg `pwd`/artifacts
      - store_artifacts:
          path: ./artifacts
          destination: OKta.Xamarin-ARTIFACTS

      
  
  #say-hello:
    # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
    #docker:
      #- image: cimg/base:stable
    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    #steps:
      #- checkout
      #- run:
          #name: "Say hello"
          #command: "echo Hello, World!"

# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  build:
    jobs:
      - build-nuget-packages
